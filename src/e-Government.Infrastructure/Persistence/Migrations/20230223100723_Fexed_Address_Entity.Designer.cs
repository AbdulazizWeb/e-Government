// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using e_Government.Infrastructure.Persistence;

#nullable disable

namespace e_Government.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230223100723_Fexed_Address_Entity")]
    partial class Fexed_Address_Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("e_Government.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CustomsOfficeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDateOfUse")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HomeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IssuedByBranchId")
                        .HasColumnType("integer");

                    b.Property<bool>("LastAddress")
                        .HasColumnType("boolean");

                    b.Property<int>("LegalEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("PopulationId")
                        .HasColumnType("integer");

                    b.Property<int>("PostalCode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDateOfUse")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomsOfficeId");

                    b.HasIndex("IssuedByBranchId");

                    b.HasIndex("LegalEntityId");

                    b.HasIndex("PopulationId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Customs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CustomOffices");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Foreigner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Midlname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nationality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Foreigners");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Visa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomsId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ForeignerId")
                        .HasColumnType("integer");

                    b.Property<bool>("LastVisa")
                        .HasColumnType("boolean");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Validity")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ValidityPerriod")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomsId");

                    b.HasIndex("ForeignerId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Visas");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.Certificate", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IssuedByBranchId")
                        .HasColumnType("integer");

                    b.Property<int>("LegalEntityId")
                        .HasColumnType("integer");

                    b.Property<bool>("Validity")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ValidityPeriod")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SerialNumber");

                    b.HasIndex("IssuedByBranchId");

                    b.HasIndex("LegalEntityId");

                    b.HasIndex("SerialNumber");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.IssuedByBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IssuedByBranchs");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.LegalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Direction")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LegalEntities");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.Pasport", b =>
                {
                    b.Property<string>("SerialNumber")
                        .HasColumnType("text");

                    b.Property<bool>("Citizenship")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IssuedByBranchId")
                        .HasColumnType("integer");

                    b.Property<string>("PINFLNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PopulationId")
                        .HasColumnType("integer");

                    b.Property<bool>("Validity")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ValidityPeriod")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("countryNameCitizenship")
                        .HasColumnType("integer");

                    b.HasKey("SerialNumber");

                    b.HasIndex("IssuedByBranchId");

                    b.HasIndex("PopulationId");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.ToTable("Pasports");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.Population", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DiedDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MidleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nationality")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Populations");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.PopulationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Population1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Population2Id")
                        .HasColumnType("integer");

                    b.Property<int>("Relative")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Population1Id");

                    b.ToTable("PopulationPopulations");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Address", b =>
                {
                    b.HasOne("e_Government.Domain.Entities.ForeignSection.Customs", "CustomsOffice")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomsOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.Legal.IssuedByBranch", "IssuedByBranch")
                        .WithMany("Addresses")
                        .HasForeignKey("IssuedByBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.Legal.LegalEntity", "LegalEntity")
                        .WithMany("Addresses")
                        .HasForeignKey("LegalEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.PopulationSection.Population", "Population")
                        .WithMany("Addresses")
                        .HasForeignKey("PopulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomsOffice");

                    b.Navigation("IssuedByBranch");

                    b.Navigation("LegalEntity");

                    b.Navigation("Population");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Visa", b =>
                {
                    b.HasOne("e_Government.Domain.Entities.ForeignSection.Customs", "Customs")
                        .WithMany("Visas")
                        .HasForeignKey("CustomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.ForeignSection.Foreigner", "Foreigner")
                        .WithMany("Visas")
                        .HasForeignKey("ForeignerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customs");

                    b.Navigation("Foreigner");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.Certificate", b =>
                {
                    b.HasOne("e_Government.Domain.Entities.Legal.IssuedByBranch", "IssuedByBranch")
                        .WithMany("Certificates")
                        .HasForeignKey("IssuedByBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.Legal.LegalEntity", "LegalEntity")
                        .WithMany("Certificates")
                        .HasForeignKey("LegalEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssuedByBranch");

                    b.Navigation("LegalEntity");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.Pasport", b =>
                {
                    b.HasOne("e_Government.Domain.Entities.Legal.IssuedByBranch", "IssuedByBranch")
                        .WithMany("Pasports")
                        .HasForeignKey("IssuedByBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("e_Government.Domain.Entities.PopulationSection.Population", "Population")
                        .WithMany("Pasports")
                        .HasForeignKey("PopulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssuedByBranch");

                    b.Navigation("Population");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.PopulationPopulation", b =>
                {
                    b.HasOne("e_Government.Domain.Entities.PopulationSection.Population", "Population")
                        .WithMany("PopuletionPopulations")
                        .HasForeignKey("Population1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Population");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Customs", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Visas");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.ForeignSection.Foreigner", b =>
                {
                    b.Navigation("Visas");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.IssuedByBranch", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Certificates");

                    b.Navigation("Pasports");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.Legal.LegalEntity", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Certificates");
                });

            modelBuilder.Entity("e_Government.Domain.Entities.PopulationSection.Population", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Pasports");

                    b.Navigation("PopuletionPopulations");
                });
#pragma warning restore 612, 618
        }
    }
}
